// Generated by view binder compiler. Do not edit!
package com.example.tagorganizer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tagorganizer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMediaControlBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button back;

  @NonNull
  public final Button bookmark;

  @NonNull
  public final Button next;

  @NonNull
  public final Button playPause;

  @NonNull
  public final Button repeat;

  @NonNull
  public final Button shuffle;

  @NonNull
  public final Button skipBack;

  @NonNull
  public final Button skipForward;

  private FragmentMediaControlBinding(@NonNull RelativeLayout rootView, @NonNull Button back,
      @NonNull Button bookmark, @NonNull Button next, @NonNull Button playPause,
      @NonNull Button repeat, @NonNull Button shuffle, @NonNull Button skipBack,
      @NonNull Button skipForward) {
    this.rootView = rootView;
    this.back = back;
    this.bookmark = bookmark;
    this.next = next;
    this.playPause = playPause;
    this.repeat = repeat;
    this.shuffle = shuffle;
    this.skipBack = skipBack;
    this.skipForward = skipForward;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMediaControlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMediaControlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_media_control, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMediaControlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      Button back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.bookmark;
      Button bookmark = ViewBindings.findChildViewById(rootView, id);
      if (bookmark == null) {
        break missingId;
      }

      id = R.id.next;
      Button next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.playPause;
      Button playPause = ViewBindings.findChildViewById(rootView, id);
      if (playPause == null) {
        break missingId;
      }

      id = R.id.repeat;
      Button repeat = ViewBindings.findChildViewById(rootView, id);
      if (repeat == null) {
        break missingId;
      }

      id = R.id.shuffle;
      Button shuffle = ViewBindings.findChildViewById(rootView, id);
      if (shuffle == null) {
        break missingId;
      }

      id = R.id.skipBack;
      Button skipBack = ViewBindings.findChildViewById(rootView, id);
      if (skipBack == null) {
        break missingId;
      }

      id = R.id.skipForward;
      Button skipForward = ViewBindings.findChildViewById(rootView, id);
      if (skipForward == null) {
        break missingId;
      }

      return new FragmentMediaControlBinding((RelativeLayout) rootView, back, bookmark, next,
          playPause, repeat, shuffle, skipBack, skipForward);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
